#!/bin/sh

prefix=@prefix@
exec_prefix=@exec_prefix@
datarootdir=@datarootdir@

export PATH=$PATH:/usr/script

brandcheck=`cat /etc/brand`
modelcheck=`cat /etc/model`

if [ $modelcheck == "sf8008" ] || [ $modelcheck == "sf8008m" ] || [ $modelcheck == "ustym4kpro" ] || [ $modelcheck == "cc1" ] || [ $modelcheck == "gbtrio4k" ] || [ $modelcheck == "gbip4k" ] || [ $modelcheck == "beyonwizv2" ] || [ $modelcheck == "viper4k" ]; then
	count=`ps -ef |grep libreader |grep -v "grep" |wc -l`
	if [ 0 == $count ];then
		libreader 720P_50
	fi
fi

if [ -d /home/root ]; then
	export HOME=/home/root
	cd
fi

# any debuglevel passed?
if [ -z $ENIGMA_DEBUG_LVL ]; then
	DEBUG_LVL=3
else
	DEBUG_LVL=$ENIGMA_DEBUG_LVL
fi

#check for sundtek tuner helper lib
if [ -e /opt/lib/libmediaclient.so ]; then
	LIBS="/opt/lib/libmediaclient.so @libdir@/libopen.so.0.0.0"
else
	LIBS="@libdir@/libopen.so.0.0.0"
fi

if [ -f /proc/stb/fp/nec_ir ]; then
	echo 1 > /proc/stb/fp/nec_ir
	[ -f /sys/class/remote/amremote/protocol ] && echo 2 > /sys/class/remote/amremote/protocol
fi

if [ ! -e /etc/enigma2/settings ]; then
	touch /etc/enigma2/settings
fi

# enigma main loop
while : ; do
	# show bootlogo on enigma2 start
	if [ -x @bindir@/showiframe ]; then
		if [ -f @sysconfdir@/enigma2/backdrop.mvi ]; then
			@bindir@/showiframe @sysconfdir@/enigma2/backdrop.mvi
		elif [ -f @sysconfdir@/enigma2/bootlogo.mvi ]; then
			@bindir@/showiframe @sysconfdir@/enigma2/bootlogo.mvi
		elif [ -f @datadir@/bootlogo.mvi ]; then
			@bindir@/showiframe @datadir@/bootlogo.mvi
		fi
	fi

	# hook to execute scripts always before enigma2 start
	if [ -x @bindir@/enigma2_pre_start.sh ]; then
		@bindir@/enigma2_pre_start.sh
	fi

	# dreamci
	if [ -x @bindir@/enigma2_pre_start_ciplus.sh ]; then
		@bindir@/enigma2_pre_start_ciplus.sh
	fi

	# start enigma
	sync
	if [ $DEBUG_LVL -lt 4 ]; then
		LD_PRELOAD=$LIBS ENIGMA_DEBUG_LVL=$DEBUG_LVL @bindir@/enigma2
	else
		# remove old logfiles
		keep=5;
		for file in `ls -t /home/root/enigma.*.debuglog`; do let "keep--"; if [ "$keep" -lt "0" ]; then rm $file; fi; done
		# todays log file
		file="/home/root/enigma.$(date +%Y%m%d).debuglog"
		LD_PRELOAD=$LIBS ENIGMA_DEBUG_LVL=$DEBUG_LVL @bindir@/enigma2 >> $file 2>&1
	fi


	# enigma2 exit codes:
	#
	#  1 - halt
	#  2 - reboot
	#  3 - restart enigma in normal mode
	#  4 - front processor upgrade
	#  5 - install new settings
	#  6 - restart enigma in debug mode
	# 12 - Reboot to android
	# 16 - Reboot to recovery
	# 42 - offline update
	# 43 - restart for autoinstall
	# 44 - INI MICOM upgrade
	# 45 - GigaBlue WOL
	#
	# >128 signal

	ret=$?
	case $ret in
		1)
			/sbin/halt
			;;
		2)
			if [ -f /proc/stb/fp/force_restart ]; then
				echo 1 > /proc/stb/fp/force_restart
			fi
			/sbin/reboot
			;;
		3)
			DEBUG_LVL=3
			;;
		4)
			/sbin/rmmod lcd
			/usr/sbin/fpupgrade --upgrade 2>&1 | tee /home/root/fpupgrade.log
			sleep 1;
			/sbin/rmmod fp
			/sbin/modprobe fp
			/sbin/reboot
			;;
		5)
			if ! grep -q config.misc.RestartUI /etc/enigma2/settings; then
				echo "config.misc.RestartUI=true" >>/etc/enigma2/settings
			fi
			;;
		6)
			DEBUG_LVL=4
			;;
		12)
			if [ -e /dev/block/by-name/bootoptions ]; then
				mkdir -p /tmp/bootoptions
				mount /dev/block/by-name/bootoptions /tmp/bootoptions
				cp -f /tmp/bootoptions/STARTUP_ANDROID /tmp/bootoptions/STARTUP_ONCE
			else
				if [ $modelcheck == "su980" ] || [ $brandcheck == "mecool" ]; then
					echo "rescue not needed!"
				else
					echo "rescue" > /proc/stb/fp/boot_mode
				fi
			fi
			if [ -e /usr/bin/setenv ]; then
				/usr/bin/setenv  default_sys  1
			fi
			if [ -e /usr/sbin/fw_setenv ]; then
				/usr/sbin/fw_setenv bootfromnand 1
			fi
			/sbin/reboot
			;;
		16)
			if [ -e /dev/block/by-name/bootoptions ]; then
				mkdir -p /tmp/bootoptions
				mount /dev/block/by-name/bootoptions /tmp/bootoptions
				cp -f /tmp/bootoptions/STARTUP_RECOVERY /tmp/bootoptions/STARTUP_ONCE
			else
				echo "rescue" > /proc/stb/fp/boot_mode
			fi
			/sbin/reboot
			;;
		42)
			df -P | grep -v "tmpfs " | awk '{print $6}' | tail -n +3 > /tmp/upgrade_mountpoints.txt
			while read line; do
				if [  -f $line/var/lib/opkg/status ]; then
				DESTS=$DESTS" --add-dest "$line":"$line
			fi
			done < /tmp/upgrade_mountpoints.txt
			# bind the console (when available)
			[ -f /sys/class/vtconsole/vtcon1/bind ] && echo 1 > /sys/class/vtconsole/vtcon1/bind
			prevupd=0
			currupd=999
			opkg update 2>&1 | tee /home/root/ipkgupgrade.log
			while [ $currupd -gt 0 -a $currupd -ne $prevupd ]; do
				opkg upgrade $DESTS 2>&1 | tee -a /home/root/ipkgupgrade.log
				prevupd=$currupd
				currupd=`opkg list-upgradable | wc -l`
				echo "===> $currupd PACKAGE(S) REMAINING" >> /home/root/ipkupgrade.log
			done
			/sbin/reboot
			;;
		43)
			#auto install and autobackup
			[ -f /sys/class/vtconsole/vtcon1/bind ] && echo 1 > /sys/class/vtconsole/vtcon1/bind
			/etc/init.d/settings-restore.sh
			/etc/init.d/avahi-daemon stop
			ifdown eth1
			ip addr flush dev eth1 scope global
			ifdown eth0
			ip addr flush dev eth0 scope global
			/etc/init.d/networking stop
			killall -9 udhcpc
			rm /var/run/udhcpc*
			/etc/init.d/dbus-1 reload
			/etc/init.d/networking start
			/etc/init.d/avahi-daemon start
			if [ ! -f /etc/.doNotAutoinstall ]; then
				touch /etc/.doAutoinstall
			else
				rm -f /etc/.doNotAutoInstall
			fi
			break
			;;
		44)
			@libdir@/enigma2/python/Plugins/SystemPlugins/MICOMUpgrade/bin/fbclear
			@bindir@/showiframe @libdir@/enigma2/python/Plugins/SystemPlugins/MICOMUpgrade/wait.mvi
			echo fpupload >/proc/vfd && sleep 3 && dd bs=256k if=/tmp/micom.bin of=/dev/mcu
			@bindir@/showiframe @libdir@/enigma2/python/Plugins/SystemPlugins/MICOMUpgrade/reboot.mvi
			# Wait forever for the user to power off
			while(true) ; do sleep 60 ; done
			;;
		45)
			echo "    " > /dev/lcd0
			/usr/bin/gigablue_wol
			;;
		*)
			break
			;;
	esac

done
